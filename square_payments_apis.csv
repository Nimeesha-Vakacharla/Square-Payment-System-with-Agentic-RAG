API Name,Endpoint,Description,Parameters,Node Js,Method
Payments,/v2/payments,Create payment,"idempotency_key,source_id,accept_partial_authorization,amount_money","import { SquareClient, SquareEnvironment } from 'square';\nasync function main() {\n    const client = new SquareClient({\n        environment: SquareEnvironment.Sandbox,\n        token: 'EAAAl0b5c0WPRN76d_g64BLjPOvYvILLCvGd2zxACIm3rlE1zaMqO8jzPqONOsU5'\n    });\n    try {\n        const response = await client.payments.create({\n            idempotencyKey: '72b2b262-ebb3-4a6a-8d5f-64355fecd6e3',\n            sourceId: 'cnon:gift-card-nonce-ok',\n            acceptPartialAuthorization: true,\n            amountMoney: {\n                currency: 'USD',\n                amount: BigInt('200')\n            }\n        });\n        console.log(response);\n    } catch (error) {\n        console.error(error);\n    }\n}\nmain();",POST
Payments,/v2/payments/J4cpcYKgzOfvQ7VO1ilH3CIpk7KZY,Retrieves details for a specific payment,"payment_id","import { SquareClient, SquareEnvironment } from 'square';\nasync function main() {\n    const client = new SquareClient({\n        environment: SquareEnvironment.Sandbox,\n        token: 'EAAAl0b5c0WPRN76d_g64BLjPOvYvILLCvGd2zxACIm3rlE1zaMqO8jzPqONOsU5'\n    });\n    try {\n        const response = await client.payments.get({\n            paymentId: 'J4cpcYKgzOfvQ7VO1ilH3CIpk7KZY'\n        });\n        console.log(response);\n    } catch (error) {\n        console.error(error);\n    }\n}\nmain();",GET
Payments,/v2/payments?begin_time=2025-05-04T04:12:36.780Z&end_time=2025-05-04T04:12:51.149Z&offline_begin_time=2025-05-04T04:13:08.820Z&offline_end_time=2025-05-04T04:13:25.354Z,Retrieves a list of payments taken by the account making the request.,"begin_time,end_time,offline_begin_time,offline_end_time","import { SquareClient, SquareEnvironment } from 'square';\nasync function main() {\n    const client = new SquareClient({\n        environment: SquareEnvironment.Sandbox,\n        token: 'EAAAl0b5c0WPRN76d_g64BLjPOvYvILLCvGd2zxACIm3rlE1zaMqO8jzPqONOsU5'\n    });\n    try {\n        const response = await client.payments.list({\n            beginTime: '2025-05-04T04:12:36.780Z',\n            endTime: '2025-05-04T04:12:51.149Z',\n            offlineBeginTime: '2025-05-04T04:13:08.820Z',\n            offlineEndTime: '2025-05-04T04:13:25.354Z'\n        });\n        console.log(response);\n    } catch (error) {\n        console.error(error);\n    }\n}\nmain();",GET